services:
  postgres:
    image: postgres:15
    container_name: aura-postgres
    environment:
      POSTGRES_USER: aura
      POSTGRES_PASSWORD: aura
      POSTGRES_DB: aura
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aura -d aura"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: aura-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5
    container_name: aura-neo4j
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  chroma:
    image: chromadb/chroma:latest
    container_name: aura-chroma
    ports:
      - "8001:8000" # Expose on 8001 to avoid conflict with backend
    volumes:
      - chroma_data:/chroma/.chroma/

  backend:
    build: .
    container_name: aura-backend
    environment:
      DATABASE_URL: "postgresql://aura:aura@postgres:5432/aura"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      NEO4J_URI: "neo4j://neo4j:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASSWORD: "password"
      CHROMA_HOST: "chroma"
      CHROMA_PORT: "8000"
      SECRET_KEY: "a_very_secret_key"
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      UPLOADS_DIR: "/app/uploads"
      TESTING: "False"
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      chroma:
        condition: service_started

  worker:
    build: .
    container_name: aura-worker
    environment:
      DATABASE_URL: "postgresql://aura:aura@postgres:5432/aura"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      NEO4J_URI: "neo4j://neo4j:7687"
      NEO4J_USER: "neo4j"
      NEO4J_PASSWORD: "password"
      CHROMA_HOST: "chroma"
      CHROMA_PORT: "8000"
      SECRET_KEY: "a_very_secret_key"
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      UPLOADS_DIR: "/app/uploads"
      TESTING: "False"
    volumes:
      - .:/app
    command: celery -A app.worker worker --loglevel=info --pool=solo
    depends_on:
      backend:
        condition: service_started
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  neo4j_data:
  chroma_data: